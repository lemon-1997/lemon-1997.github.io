<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>微服务 on lemon blog</title><link>https://lemon-1997.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link><description>Recent content in 微服务 on lemon blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 20 Apr 2023 18:41:58 +0800</lastBuildDate><atom:link href="https://lemon-1997.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/rss.xml" rel="self" type="application/rss+xml"/><item><title>Google分布式框架Weaver（五）：实现自己的部署器</title><link>https://lemon-1997.github.io/post/frame-weaver-5.html</link><pubDate>Thu, 20 Apr 2023 18:41:58 +0800</pubDate><guid>https://lemon-1997.github.io/post/frame-weaver-5.html</guid><description>&lt;p>上一节我们了解到了weavelet，envelope之间的通信，以及babysister是如何管理各个component，weaver命令多进程部署是如何工作的。
weaver支持开发者去实现部署，可以利用它去实现指定副本的多进程部署（weaver自带的命令默认副本数为2个），多机器部署等等，下面，我将介绍如何去实现自己的部署应用。&lt;/p></description></item><item><title>Google分布式框架Weaver（四）：多进程部署原理</title><link>https://lemon-1997.github.io/post/frame-weaver-4.html</link><pubDate>Thu, 30 Mar 2023 19:15:36 +0800</pubDate><guid>https://lemon-1997.github.io/post/frame-weaver-4.html</guid><description>&lt;p>到上一小节，我们已经学会了如何去使用weaver进行项目开发，相信很多人对weaver的原理很感兴趣，想了解weaver内部到底是如何实现的。
这一节，我将介绍weaver在多进程部署中，组件之间的通信过程。&lt;/p></description></item><item><title>Google分布式框架Weaver（三）：测试与可观测性</title><link>https://lemon-1997.github.io/post/frame-weaver-3.html</link><pubDate>Tue, 21 Mar 2023 20:00:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/frame-weaver-3.html</guid><description>&lt;p>上一次我们通过weaver中的组件完成了一个简易的商品后台系统，并对外提供http接口。
但是在实际开发中，除了业务逻辑的实现，少不了测试代码，也少不了可观测性（日志，指标，链路追踪）。&lt;/p></description></item><item><title>Google分布式框架Weaver（二）：组件搭建商品后台</title><link>https://lemon-1997.github.io/post/frame-weaver-2.html</link><pubDate>Wed, 15 Mar 2023 21:00:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/frame-weaver-2.html</guid><description>&lt;p>组件是weaver中的一个核心抽象，在我们的应用中，组件是一组接口的实现，可以理解为微服务对外提供的API。
所以，组件是学习这个框架的第一步，接下来我将使用组件从零搭建一个简易的商品后台系统。&lt;/p></description></item><item><title>Google分布式框架Weaver（一）：单体开发，微服务运行</title><link>https://lemon-1997.github.io/post/frame-weaver.html</link><pubDate>Wed, 08 Mar 2023 20:00:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/frame-weaver.html</guid><description>&lt;p>最近，Google开源了一个用于编写、部署和管理分布式应用程序的编程框架：Service Weaver。
这个框架设计思想很巧妙，使用该框架可以以函数调用的方式去调用其他服务，无需考虑任何网络或者序列化问题，在部署时却能够以微服务的方式运行。
这样一来，开发者可以在自己的机器上运行、测试和调试，非常的方便。&lt;/p></description></item></channel></rss>