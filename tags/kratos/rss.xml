<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kratos on lemon blog</title><link>https://lemon-1997.github.io/tags/kratos/</link><description>Recent content in Kratos on lemon blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 30 Nov 2024 12:30:00 +0800</lastBuildDate><atom:link href="https://lemon-1997.github.io/tags/kratos/rss.xml" rel="self" type="application/rss+xml"/><item><title>Kratos：Go微服务框架的优秀设计</title><link>https://lemon-1997.github.io/post/frame-kratos.html</link><pubDate>Sat, 30 Nov 2024 12:30:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/frame-kratos.html</guid><description>&lt;p>在现代微服务架构的浪潮中，开发者面临着越来越高的性能要求和复杂的系统设计挑战。Go 语言凭借其高效、轻量级的特性，成为了构建微服务的热门选择。而 Kratos 作为一款 Go 开发的微服务框架，以其模块化、易扩展、和高性能的设计，迅速吸引了大量开发者的关注。 在本文中，我们将从框架设计的角度，剖析 Kratos 的优秀特性和设计理念。&lt;/p></description></item></channel></rss>