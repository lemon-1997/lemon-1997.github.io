<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>grpc on lemon blog</title><link>https://lemon-1997.github.io/tags/grpc/</link><description>Recent content in grpc on lemon blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 25 Nov 2023 23:30:00 +0800</lastBuildDate><atom:link href="https://lemon-1997.github.io/tags/grpc/rss.xml" rel="self" type="application/rss+xml"/><item><title>动态gRPC-HTTP代理（一）：设计</title><link>https://lemon-1997.github.io/post/project-grpc.html</link><pubDate>Sat, 25 Nov 2023 23:30:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/project-grpc.html</guid><description>&lt;p>在当前主流的微服务架构中，许多公司选择使用gRPC协议作为内部通信机制。然而，在与外部系统进行交互时，HTTP仍然是不可或缺的协议。为了解决这一问题，常见的解决方案是采用grpc-gateway或其他网关自带的插件进行协议转换。但是，这些方案都存在一个共同的痛点：每次更新服务都需要手动更新proto或pb文件，并重新配置网关，这给开发者带来了不小的麻烦。因此，我们迫切需要一个不依赖于proto文件、能够动态感知gRPC服务的插件，以简化这一流程并提高开发效率。本文将探讨这一问题的背景、现有解决方案的局限性，以及我们所期望的理想插件应具备的特性。&lt;/p></description></item></channel></rss>