<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>黑魔法 on lemon blog</title><link>https://lemon-1997.github.io/tags/%E9%BB%91%E9%AD%94%E6%B3%95/</link><description>Recent content in 黑魔法 on lemon blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 31 May 2024 16:00:00 +0800</lastBuildDate><atom:link href="https://lemon-1997.github.io/tags/%E9%BB%91%E9%AD%94%E6%B3%95/rss.xml" rel="self" type="application/rss+xml"/><item><title>Go语言的黑科技：编译劫持与隐形链接的应用</title><link>https://lemon-1997.github.io/post/best-magic.html</link><pubDate>Fri, 31 May 2024 16:00:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/best-magic.html</guid><description>&lt;p>在Go语言的世界里，有很多被戏称为“黑魔法”的技巧和特性，它们超越了常规的开发范畴，为开发者提供了更大的灵活性和控制力。从使用&lt;code>unsafe&lt;/code>包进行内存操作，到利用&lt;code>reflect&lt;/code>包进行运行时类型检查，再到使用&lt;code>cgo&lt;/code>与C语言进行交互，这些技术都在特定情况下展现出了强大的能力。&lt;/p>
&lt;p>然而，在这个被熟知的黑魔法所充斥的世界中，还存在着一些鲜为人知的高级技巧，它们虽不为大多数开发者所熟知，却在某些特定场景下展现出了强大的威力。本文将带领你进入Go语言的神秘境地，探索编译劫持与隐形链接这两种高阶黑魔法的奥秘。&lt;/p></description></item></channel></rss>