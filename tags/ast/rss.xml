<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AST on lemon blog</title><link>https://lemon-1997.github.io/tags/ast/</link><description>Recent content in AST on lemon blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 26 Dec 2022 20:30:00 +0800</lastBuildDate><atom:link href="https://lemon-1997.github.io/tags/ast/rss.xml" rel="self" type="application/rss+xml"/><item><title>go自动化生成数据库curd代码（二）：go抽象语法树（AST）</title><link>https://lemon-1997.github.io/post/project-sqlboy-2.html</link><pubDate>Mon, 26 Dec 2022 20:30:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/project-sqlboy-2.html</guid><description>&lt;p>在上一篇文章中，介绍了我对这个项目的想法，总体设计与思路，而在项目中AST是一个很重要的模块，他主要负责输入的解析，还负责部分代码生成工作。
接下来，我将为大家介绍go中的抽象语法树，也会跟大家分享我是如何利用AST去实现功能的。&lt;/p></description></item></channel></rss>