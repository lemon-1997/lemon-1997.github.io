<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>整洁架构 on lemon blog</title><link>https://lemon-1997.github.io/tags/%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84/</link><description>Recent content in 整洁架构 on lemon blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 28 Jan 2023 15:00:00 +0800</lastBuildDate><atom:link href="https://lemon-1997.github.io/tags/%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84/rss.xml" rel="self" type="application/rss+xml"/><item><title>go整洁架构简单模板</title><link>https://lemon-1997.github.io/post/best-clean.html</link><pubDate>Sat, 28 Jan 2023 15:00:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/best-clean.html</guid><description>&lt;p>在日常开发中，我们大多的精力都花在业务开发上，设计可能只占用了少部分的时间。
实际上，好的架构会让别人维护起来很舒服，很轻松。而不好的设计，会浪费你更多的时间，提高成本。
近些年来，整洁架构，领域驱动设计特别火，很多程序员也都用上了。
接下来，我将基于实际开发，介绍go使用整洁架构的例子。&lt;/p></description></item></channel></rss>