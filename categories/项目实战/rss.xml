<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>项目实战 on lemon blog</title><link>https://lemon-1997.github.io/categories/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/</link><description>Recent content in 项目实战 on lemon blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 27 Dec 2022 20:30:00 +0800</lastBuildDate><atom:link href="https://lemon-1997.github.io/categories/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/rss.xml" rel="self" type="application/rss+xml"/><item><title>go自动化生成数据库curd代码（二）：go抽象语法树（AST）</title><link>https://lemon-1997.github.io/post/project-sqlboy-2.html</link><pubDate>Tue, 27 Dec 2022 20:30:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/project-sqlboy-2.html</guid><description>&lt;p>在上一篇文章中，介绍了我对这个项目的想法，总体设计与思路，而在项目中AST是一个很重要的模块，他主要负责输入的解析，还负责部分代码生成工作。
接下来，我将为大家介绍go中的抽象语法树，也会跟大家分享我是如何利用AST去实现功能的。&lt;/p></description></item><item><title>go自动化生成数据库curd代码（一）：想法与设计</title><link>https://lemon-1997.github.io/post/project-sqlboy.html</link><pubDate>Mon, 26 Dec 2022 20:30:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/project-sqlboy.html</guid><description>&lt;p>在平常业务开发中，我们经常会使用一些数据库框架，诸如gorm，sqlc，ent等等。
每当想新加一个表时，就会产生很多重复性的操作，例如插入数据，读取数据，删除之类。
这大大降低了开发效率，于是，我萌生了一个想法，想把这些操作都交给程序去实现。&lt;/p></description></item></channel></rss>