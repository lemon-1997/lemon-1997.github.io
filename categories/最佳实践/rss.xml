<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>最佳实践 on lemon blog</title><link>https://lemon-1997.github.io/categories/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><description>Recent content in 最佳实践 on lemon blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 31 May 2024 16:00:00 +0800</lastBuildDate><atom:link href="https://lemon-1997.github.io/categories/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/rss.xml" rel="self" type="application/rss+xml"/><item><title>Go语言的黑科技：编译劫持与隐形链接的应用</title><link>https://lemon-1997.github.io/post/best-magic.html</link><pubDate>Fri, 31 May 2024 16:00:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/best-magic.html</guid><description>&lt;p>在Go语言的世界里，有很多被戏称为“黑魔法”的技巧和特性，它们超越了常规的开发范畴，为开发者提供了更大的灵活性和控制力。从使用&lt;code>unsafe&lt;/code>包进行内存操作，到利用&lt;code>reflect&lt;/code>包进行运行时类型检查，再到使用&lt;code>cgo&lt;/code>与C语言进行交互，这些技术都在特定情况下展现出了强大的能力。&lt;/p>
&lt;p>然而，在这个被熟知的黑魔法所充斥的世界中，还存在着一些鲜为人知的高级技巧，它们虽不为大多数开发者所熟知，却在某些特定场景下展现出了强大的威力。本文将带领你进入Go语言的神秘境地，探索编译劫持与隐形链接这两种高阶黑魔法的奥秘。&lt;/p></description></item><item><title>go整洁架构简单模板</title><link>https://lemon-1997.github.io/post/best-clean.html</link><pubDate>Sat, 28 Jan 2023 15:00:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/best-clean.html</guid><description>&lt;p>在日常开发中，我们大多的精力都花在业务开发上，设计可能只占用了少部分的时间。
实际上，好的架构会让别人维护起来很舒服，很轻松。而不好的设计，会浪费你更多的时间，提高成本。
近些年来，整洁架构，领域驱动设计特别火，很多程序员也都用上了。
接下来，我将基于实际开发，介绍go使用整洁架构的例子。&lt;/p></description></item><item><title>如何在go中写好单元测试</title><link>https://lemon-1997.github.io/post/best-test.html</link><pubDate>Wed, 24 Aug 2022 20:25:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/best-test.html</guid><description>&lt;p>当你还在用postman测试你的api时，那表明你还没找到使用go的最佳姿势，阅读这篇文章，一起来了解下go内置的测试框架，这会对你有所帮助。&lt;/p></description></item><item><title>mysql事务在go语言中的正确打开方式</title><link>https://lemon-1997.github.io/post/best-transaction.html</link><pubDate>Thu, 18 Aug 2022 21:45:00 +0800</pubDate><guid>https://lemon-1997.github.io/post/best-transaction.html</guid><description>&lt;p>相信大家在做curd项目时经常会使用到mysql中的事务，这篇文章将会展示在go中实现mysql事务的几种方式，希望阅读后能够给你带来启发。&lt;/p></description></item></channel></rss>